/* */

import re

def password_strength(password):
    # Criteria
    length_criteria = len(password) >= 8
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    digit_criteria = re.search(r'\d', password) is not None
    special_criteria = re.search(r'[@$!%*?&#]', password) is not None
    common_passwords = ['password', '123456', '12345678', 'qwerty', 'abc123', 'letmein', 'monkey', 'football', 'iloveyou', 'admin']

    uniqueness_criteria = password not in common_passwords

    # Calculate score
    score = sum([length_criteria, lowercase_criteria, uppercase_criteria, digit_criteria, special_criteria, uniqueness_criteria])
    
    # Feedback
    feedback = []
    if not length_criteria:
        feedback.append("Password should be at least 8 characters long.")
    if not lowercase_criteria:
        feedback.append("Password should include at least one lowercase letter.")
    if not uppercase_criteria:
        feedback.append("Password should include at least one uppercase letter.")
    if not digit_criteria:
        feedback.append("Password should include at least one digit.")
    if not special_criteria:
        feedback.append("Password should include at least one special character.")
    if not uniqueness_criteria:
        feedback.append("Password is too common or easily guessable.")
    
    strength = ["Very Weak", "Weak", "Moderate", "Strong", "Very Strong"]
    
    return {
        "score": score,
        "strength": strength[score],
        "feedback": feedback
    }

# Example usage
password = "Password123!"
result = password_strength(password)
print(f"Password strength: {result['strength']}")
for feedback in result['feedback']:
    print(f"- {feedback}")
